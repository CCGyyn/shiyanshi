<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zeng.ezsh.wy.dao.FeedbackMapper" >
  <resultMap id="BaseResultMap" type="com.zeng.ezsh.wy.entity.Feedback" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="community_id" property="communityId" jdbcType="INTEGER" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, community_id, user_phone, content, img, result,time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from feedback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from feedback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zeng.ezsh.wy.entity.Feedback" >
    insert into feedback (id, user_name, community_id, 
      user_phone, content, img, 
      result)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{communityId,jdbcType=INTEGER}, 
      #{userPhone,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{result,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zeng.ezsh.wy.entity.Feedback" >
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="communityId != null" >
        community_id,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="result != null" >
        result,
      </if>
       <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="communityId != null" >
        #{communityId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=INTEGER},
      </if>
       <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeng.ezsh.wy.entity.Feedback" >
    update feedback
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="communityId != null" >
        community_id = #{communityId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeng.ezsh.wy.entity.Feedback" >
    update feedback
    set user_name = #{userName,jdbcType=VARCHAR},
      community_id = #{communityId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      result = #{result,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 客服获取用户反馈列表 -->
  <select id="getFeedbackList" parameterType="map" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
    from feedback
    where result = #{result} order by time desc
    limit #{start},#{pagesize}
  </select>
  <!-- 客服审核用户反馈 -->
  <update id="veryfyFeedback" parameterType="map" >
  	update feedback
  	set result = #{result} where id = #{id}
  </update>
  <!-- 用户获取意见记录 -->
  <select id="userGetFeedback" parameterType="map" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
    from feedback
  	where communityId = #{communityId} and userPhone = #{userPhone}
  </select>
  <!-- 获取用户反馈总数 -->
  <select id="getFeedbackCount" parameterType="map" resultType="int">
  	select count(*)
  	from feedback
  	where result = #{result}
  </select>
  <!--根据意见记录id获取图片路径  -->
  <select id="getImgsUrlById" parameterType="int" resultType="String">
  	select img 
  	from feedback
  	where id = #{id}
  </select>
</mapper>